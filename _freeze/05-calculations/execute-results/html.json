{
  "hash": "e678a5d921ad6090d5885a9163995464",
  "result": {
    "markdown": "# Modeling Calculations {#sec-calculations}\n\n\n\n\n\n::: callout\n**OBJECTIVES**\n\n-   Create formulas.\n-   Setting up a calculation model.\n-   Copy formulas and absolute and relative cell addresses.\n-   Formulas that evaluate to TRUE or FALSE.\n-   Use of cell names.\n:::\n\nOne of the most important aspects of working with Excel is to perform calculations. You need formulas in these calculations. To work effectively and efficiently with formulas, you need to think in advance carefully about what to put where in the worksheet. This can save you a lot of time and trouble.\n\nCalculations are performed using formulas. Formulas contain numbers or references to cells with numbers. Between the numbers, there are the symbols for the calculations to be carried out, such as `+`, `-`, `*`,`/`, etc.\n\n::: callout-warning\nA formula should always begin with the `=` character. It is possible to start a formula with a `+`, but in that case, Excel translates this in `=` after entering the data.\n:::\n\nTo enter a formula you start typing `=` and then you enter the calculation as you would do it on a calculator. Instead of numbers, you also can type cell addresses or cell names where the numbers are. Also, instead of typing in the cell addresses, you can designate it with the mouse.\n\nIn @tbl-calculation-operators you can find the symbols (operators) for performing calculations.\n\n| symbol | meaning                             | example     | result |\n|--------|-------------------------------------|-------------|--------|\n| `+`    | addition                            | `=4+5`      | 9      |\n| `-`    | subtraction                         | `=29-6`     | 23     |\n| `*`    | multiplication                      | `=7*8`      | 56     |\n| `/`    | division                            | `=6/2`      | 3      |\n| `^`    | exponentiation                      | `=2^3`      | 8      |\n| `()`   | parentheses for operator precedence | `=30-(4+6)` | 20     |\n\n:  Operators. {#tbl-calculation-operators}\n\n::: {#prp-}\nPractice with these examples in a worksheet.\n:::\n\n## Your first formulas {#sec-calculation-example-sellings}\n\nThis is an exercise for a very simple calculation, see @fig-example-sellings. Three cells contain numbers:\n\n-   C1, the purchase amount.\n-   B2, the profit rate.\n-   B5, the VAT rate.\n\nFour cells (C2, C3, C5, and C6) contain formulas. The idea is that if you change one or more of the values in C1, B2 or B5 all the depending values are automatically adjusted.\n\n![Example calculation purchase, profit and selling.](images/calculations/example-sellings.png){#fig-example-sellings}\n\n::: {#prp-calculation-example-sellings}\n**Calculate sellings**\n\n1.  Start with a new worksheet in a new workbook.\n\n2.  Type the texts you see in column A. Some texts don't fit within the column width. That is not important at the moment. If desired, you can make the column wider.\n\n3.  In cell B2 enter the value `25%`, in cell B5 the value `21%` and in cell C1 the value `4000`.\n\n4.  Enter in cell C2 the formula `=B2*C1`. After pressing the [Enter]{.uicontrol} key, the result of the formula, 1000, is displayedin cell C2. This is the calculated profit.\n\n5.  Enter in cell C3} the formula `=C1+C2`. Upon completion of the input in cell C3 the result, 5000, is displayed.\n\n6.  Enter in cell C5 the formula `=B5*C3`. After completion in cell C5 the result, 1050, is displayed.\n\n7.  Enter in cell C6 the formula `=C3+C5`. After completion in cell C6 the result, 6050, is displayed..\n\n8.  Experiment with other values for purchase, profit rate, and VAT rate.\n\nNote that by changing the values, all formulas will be automatically recalculated.\n\n:::\n\n## More with formulas {#sec-calculation-example-wages}\n\nIn @fig-example-wages, you see a worksheet where formulas are used to calculate the wages by multiplying the hours with an hourly rate. The total is obtained by addition.\n\n![Example calculation hours, hour rate and totals.](images/calculations/example-wages.png){#fig-example-wages}\n\n::: {#prp-calculation-example-wages}\n[File]{.smallcaps}: `Wages.xlsx`\n**Calculate working hours**\n\n1.  Open the file.\n\n2.  Enter in the column amount the correct formulas:\n\n    -   in cell [D2]{.uicontrol} the formula `=B2*C2`\n    -   in cell [D3]{.uicontrol} the formula `=B3*C3`\n    -   in cell [D4]{.uicontrol} the formula `=B4*C4`\n    -   in cell [D5]{.uicontrol} the formula `=D2+D3+D4`\n\n:::\n\n## Calculation model {#sec-calculation-model}\n\nUsing Excel, you can make all kinds of calculations. For a larger and more complex calculation, careful thinking about how setting up the calculation in a worksheet is needed.\n\nIn a calculation model, you always have to deal with three types of cells.\n\nInput\n\n:   In these cells, the user continuously enters different values. In fact, these are the cells for the variables.\n\nCalculations\n\n:   In these cells, all kinds of calculations with the values from the input cells are carried out.\n\nOutput\n\n:   In these cells, the formatted results are displayed.\n\nThe data flow in the model is from the input through the calculation to the output. When setting up a model you should think in the opposite direction. After all, the desired result is the point. From the desired results the necessary calculations are derived. And these calculations determine what input is necessary.\n\nThere are some guidelines for entering a model in Excel:\n\n1.  Make a separation between input, calculation, and output. For smaller models, this can be in separate places in the worksheet. For example, input at the top of the worksheet. For large models, it is better to use separate sheets.\n\n![Design of a calculation model.At the left 1 worksheet, at the right 3 worksheets.](images/calculations/calculation-model.svg){#fig-calculation-model}\n\n2.  Ensure that a worksheet can be read like a book, from top to bottom and from left to right.\n\n3.  Find out what numbers can change, for example, the price of an item. Put these numbers in individual cells. These numbers are variables.\n\n4.  Use as little numbers as possible in the formula itself, but use references to cells where the numbers are. Do the same for numbers that hardly change over time, such as the VAT rate.\n\n5.  Always make the purpose of the cell content visible by putting an explanatory text in a neighboring cell (before, above, ...).\n\n6.  Put headers above columns with numbers and before rows with numbers.\n\n7.  If possible, make one kind of formula per row or per column. The advantage of this is that the formulas can be copied easily across rows or columns.\n\n8.  Divide a complicated formula into multiple pieces so that intermediate results (e.g. subtotals ) can be checked. This prevents errors in formulas.\n\n9.  When using multiple worksheets for the model give these sheets obvious names.\n\n10. Take care of some documentation, especially for larger models, and put this in separate worksheets.\n\n## Copying formulas {#sec-calculation-formula-copy}\n\nIt is very useful to be able to copy formulas to other cells, especially when formulas are very similar to each other. In the following figure, you see an example where the formulas in A3, B3, C3, and D3 show great similarities. This makes it possible to enter the formula only in cell A3 and then copy it to B3:D3.\n\n::: callout-note\nA [(cell)range]{.term} is a group of cells that you can refer to in a formula. This range is usually rectangular, starting with the top left cell, then a colon, then the bottom right cell. Examples: `B2:E7`, `B3:E3`, `D2:D6`.\n:::\n\n![Example with copyable formulas.](images/calculations/formula-copy.png){#fig-formula-copy}\n\nBecause a formula often contains cell references it is important to consider what to do with these cell references during the copy action. There are two possibilities:\n\n-   The cell references adjust to a new situation. The cell addresses in the formula are relative.\n-   The cell references don't change and remain the same. The cell addresses in the formula are absolute.\n\nAn address is made absolute by putting dollar signs in the address. You can place a dollar sign for the column letter and/or for the row number. The part that contains the dollar sign is absolute and will not be changed during copying. There are four possibilities for a cell address, see @tbl-cell-addresses for the possibilities.\n\n| Type                                     | Example |\n|------------------------------------------|---------|\n| Relative address                         | `B1`    |\n| Absolute column and absolute row address | `$B$1`  |\n| Absolute column and relative row address | `$B1`   |\n| Relative row and absolute column address | `B$1`   |\n\n:  Examples of cell addresses. {#tbl-cell-addresses}\n\n::: callout-note\nWhen copying a formula with cell addresses, the absolute part is not modified and the relative part will be modified.\n:::\n\nYou can change the type of a cell reference in one of the following ways:\n\n-   Type the dollar signs at the desired place.\n-   If the cursor is in a cell address, press repeatedly on key [F4]{.uicontrol}, until the desired result is achieved. During repetitive pressing on [F4]{.uicontrol} all four possibilities will be displayed.\n\n### Copy rules {#sec-copyrules}\n\nIf you copy formulas with cell references Excel applies the following rules:\n\n-   By copying to the left or to the right direction the column letter will be lowered or raised.\n-   By copying in the direction upwards or downwards the row number will be decreased or increased.\n-   The parts in the address with a dollar sign in front, are not affected.\n\n\n| Formula      | Copy action                         | Result       |\n|--------------|-------------------------------------|--------------|\n| `=A1+B2`     | 1 cell to the right                 | `=B1+C2`     |\n|              | 1 cell down                         | `=A2+B3`     |\n|              | 1 cell to the right and 1 cell down | `=B2+C3`     |\n| `=A$1+B$2`   | 1 cell to the right                 | `=B$1+C$2`   |\n|              | 1 cell down                         | `=A$1+B$2`   |\n|              | 1 cell to the right and 1 cell down | `=B$1+C$2`   |\n| `=$A1+$B2`   | 1 cell to the right                 | `=$A1+$B2`   |\n|              | 1 cell down                         | `=$A2+$B3`   |\n|              | 1 cell to the right and 1 cell down | `=$A2+$B3`   |\n| `=$A$1+$B$2` | each copy action                    | `=$A$1+$B$2` |\n\n:  Examples of copy actions. {#tbl-copy-actions}\n\n\n### Premium Table {#sec-calculation-example-insurance}\n\nIn @fig-example-insurance, you see a list of insurance premiums for cars. The list starts at a value of \\$ 10.000 and a premium of \\$ 675. The next values grow with increments of \\$ 1000 and the premium with increments of \\$ 45. Make this list using formulas for value and premium in the rows 6 until 20.\n\n![Premium table.](images/calculations/example-insurance.png){#fig-example-insurance}\n\n::: {#prp-example-insurance}\n[File]{.smallcaps}: `Premium-Table.xlsx`\n\n1.  Open the file.\n\n2.  Format the values as currencies with the button on the ribbon (Home \\> button Accounting Number Format (group Number)\\]{.uicontrol}. Adjust also the column widths so that all contents fit.\n\n3.  Enter in cell A6 the formula `=A5+$B$1`.\n\n4.  Enter in cell B6 the formula `=B5+$D$1`.\n\n5.  Select the area A6:B6 and drag the fill handle until B20.\n\n:::\n\n## True/False formulas {#sec-calculation-boolean}\n\nThere are formulas that do not perform calculations, but compare two things, perform a kind of test. Such formulas are also called *boolean expressions* and have only two outcomes: `TRUE` or `FALSE`.\n\nIn @tbl-boolean-operators you can find the operators that you can use in boolean expressions.\n\n| Operator | Meaning                  |\n|----------|--------------------------|\n| `=`      | equal                    |\n| `<>`     | not equal to             |\n| `<`      | less than                |\n| `<=`     | less than or equal to    |\n| `>`      | greater than             |\n| `>=`     | greater than or equal to |\n\n:  Operators for comparing two items. {#tbl-boolean-operators}\n\nIn @tbl-boolean-examples are some examples of such formulas. To understand its functioning well, you could enter these in a cell. The parentheses you see in the formulas are not strictly necessary, but provide more clarity on the intent of the formula. Therefore it is recommended to always use parentheses.\n\n| Formula       | Result  |\n|---------------|---------|\n| `=(1=1)`      | `TRUE`  |\n| `=(1=2)`      | `FALSE` |\n| `=(1<>1)`     | `FALSE` |\n| `=(1<>2)`     | `TRUE`  |\n| `=(1<1)`      | `FALSE` |\n| `=(1<2)`      | `TRUE`  |\n| `=(1<=1)`     | `TRUE`  |\n| `=(1<=2)`     | `TRUE`  |\n| `=(1>2)`      | `FALSE` |\n| `=(\"a\"=\"b\")`  | `FALSE` |\n| `=(\"a\"<>\"b\")` | `TRUE`  |\n\n:  Examples of TRUE/FALSE formulas. {#tbl-boolean-examples}\n\n::: callout-warning\nIn operations, text should always be placed between double-quotes.\n:::\n\nJust putting such formulas in cells does not make much sense. However, they can appear in calculations. In that case Excel uses the following numerical values:\n\n-   `TRUE` = 1\n-   `FALSE` = 0\n\nBecause of these numerical values you can calculate with it and create conditions in a calculation. The result depends of the outcome of the condition. In the following example, the postage for orders depends on the ordered quantity.\n\n::: {#exm-calc-postage}\n**Pay shipping costs? yes or no**\n\nAt an internet shop, an order is delivered without postage for orders from \\$25. In the next figure, you can see that the postage is calculated with a true/false formula. At the beginning of the formula is `(B5<$B$2)`. This part has two possible outcomes, TRUE (=1) or FALSE (=0). And this result is again multiplied by \\$3,50. There are only two possible outcomes:\n\n-   `1 * 3.50 = 3.50`\n-   `0 * 3.50 = 0`\n\n![Example with a true/false formula.](images/calculations/example-boolean.png){#fig-example-boolean}\n\nCreate this example and check the correct working by entering different values in the cells B1, B2, and B5.\n:::\n\n## Cell Names {#sec-calculation-names-cells}\n\nThe use of meaningful names for cells and the rules for naming.\n\nWorking with cell addresses in formulas can be confusing, formulas are hard to read and it is difficult to see what the intention of the formula is. Fortunately, you can give meaningful names to cells and areas. A formula for example can then be `=Sales-Purchases`.\n\nRules for naming:\n\n-   Names should begin with a letter or with the underscore symbol (-), digits are allowed after that. It is not allowed to start a name with a digit.\n\n-   Names cannot contain spaces. To simulate a space you can use the underscore symbol, for example, [Sales_2010]{.varname}.\n\n-   Most symbols (comma, colon, exclamation point, etc.) can not be used.\n\n### Creating names {#sec-calculation-names-create}\n\nIn this task, you will learn a few ways to assign names to cells and use them in formulas.\n\nThere are several ways to assign a name to a cell. The method used in practice usually depends on the preferences of the user and their entering speed. In this task, there are two ways proposed to assign a name to a cell and three methods to use the name in a formula. The same methods can be used to assign a name to an area of cells.\n\n::: {#prp-calculation-names-create}\n\n1.  Start with a new worksheet.\n\n2.  Enter in A1 the number `100` and in A2 the number `275`.\n\n3.  Select A1 and choose [Formulas \\> Define Name (group Defined Names)]{.uicontrol}.\n\n![Dialog box New Name.](images/calculations/name-new.png){#fig-name-new}\n\nIn the [Name]{.uicontrol} text box you can enter the name. Sometimes Excel suggests a name. In the [Comment]{.uicontrol} box, you can optionally give an explanation, which can be useful later (audits) for checking and creating documentation for the model.\n\n4.  Enter the name `Purchases` and click on [OK]{.uicontrol}. The name box now displays this name instead of the address.\n\n![Cell A1, now with the name Purchases in the name box instead of the address.](images/calculations/name-box.png){#fig-name-box}\n\nAn alternative and quick way to assign a name is by selecting a cell and then directly enter the name in the name box. This is done for cell A2 in the next step.\n\n5.  Select cell A2. Click in the [Name box]{.uicontrol} and change `A2` in `Sales` and press [Enter]{.uicontrol}.\n\n6.  Select cell A3 and enter the formula for calculating the profit in one of the following ways:\n\n    -   Type `= Sales-Purchases` and press the [Enter]{.uicontrol} key.\n    -   Type `=` then select A2, type `-`, then select A1 and press the [Enter]{.uicontrol} key.\n    -   Type `=` then choose [Formulas \\> Use in formula (group Defined Names) \\> Sales]{.uicontrol}, type `-` and then choose [Formulas \\> Use in formula (group Defined Names) \\> Purchases]{.uicontrol} and press the [Enter]{.uicontrol} key.\n\nIn cell A3 the answer 175 appears. Selecting this cell shows you `=Sales-Purchases` in the formula bar. By using names you get a well readable formula.\n\n:::\n\n### Using names in existing formulas {#sec-calculation-names-using}\n\nWhen you assign a name to a cell or cell range, Excel automatically uses them in new formulas, but not in already existing formulas. In the next example, cell B5 contains the formula `=B2+B3+B4`. When you assign names to the cells B2, B3, and B4, the formula remains unchanged.\n\n![Formula with addresses instead of names.](images/calculations/example-expenses.png){#fig-example-expenses}\n\nHowever, you can quite easily use new names in existing formulas. In the file of this example, the cells in the formula already have names. Through the following steps, the addresses in the formula will be replaced by their names.\n\n::: {#prp-calculation-names-using}\n[File]{.smallcaps}: `Office-Expenses.xlsx`\n\n1.  Open the file.\n\n2.  Select cell B5.\n\n3.  Choose [Formulas]{.uicontrol} and click on the [arrow from the button Define Name (group Defined Names)]{.uicontrol} and choose [Apply Names]{.uicontrol}.\n\n![Dialog box apply names.](images/calculations/name-apply.png){#fig-name-apply}\n\n4.  Select all names and click [OK]{.uicontrol}. The formula in cell B5 now is `=Inventory+Advertising+Officecosts`.\n\n::: callout-note\nTo select multiple names, hold down the [Ctrl]{.uicontrol} key.\n:::\n\n:::\n\n### Managing Names {#sec-calculation-names-manager}\n\nExcel has capabilities for managing names. You can get a list of all names in the workbook, and you can change and remove names. Especially for the larger workbooks containing many names, this is an indispensable means for the management of names.\n\n::: {#prp-calculation-names-manager}\n[File]{.smallcaps}: `Expenses.xlsx`\n\n1.  Open the file.\n\n2.  Choose [Formulas \\> Name Manager (group Defined Names)]{.uicontrol}.\n\n![Name manager.](images/calculations/name-manager.png){#fig-name-manager}\n:::\n\n::: callout-note\nThrough this dialog box you can perform various operations with the names.\n\n-   **Deleting name**: Select the name and choose [Delete]{.uicontrol}.\n\n-   **Changing name**: Select the name and choose [Edit]{.uicontrol}.\n\n-   **Comment creating/editing**: Select the name and choose [Edit]{.uicontrol}.\n\n-   **Create a new name**: Select the name and choose [New]{.uicontrol}.\n\n:::\n\n### Documenting Names {#sec-calculation-names-list}\n\nHow to create a list of all existing names and corresponding addresses.\n\nDocumenting a spreadsheet also includes a list of all names in use and the corresponding cells. Excel can make such a list for you and put it on a worksheet, but the way to do that is not so obvious. It is recommended to create such a list of names in a new worksheet.\n\n::: {#prp-calculation-names-list}\n[File]{.smallcaps}: `Expenses.xlsx`\n\n1.  Open the file.\n\n2.  Create a new sheet and select cell A1.\n\n3.  Choose [Formulas \\> Use in formula (group Defined Names) \\> Paste Names \\> Paste List]{.uicontrol}.\n\n![List with cell names and addresses.](images/calculations/name-list.png){#fig-name-list}\n\n:::\n\n## Case: Price calculation articles {#sec-calculation-example-prices}\n\nCreating a model, using formulas and copying formulas.\n\nA shop at the international airport sells articles both tax-free and with 21% VAT. The currency for tax-free prices is the U.S. dollar, but customers can also pay in euros. For the VAT and the prices with VAT only the euro will be used. In @fig-example-prices, you can see a part of the price table. Article numbers and dollar prices are somewhat artificial to practice several Excel skills. The intention is to create this table as convenient as possible. Only some indications are given, no detailed steps.\n\n![Price table](images/calculations/example-prices.png){#fig-example-prices}\n\n::: {.content-visible when-format=\"html:js\"}\n\n<div class='webex-solution'><button>Hint</button>\n\n1. The dollar exchange rate and the VAT percentage are input variables for the calculation and should be placed at the top of the worksheet, separated from the price table. An explanatory text is in the cells before.\n\n2.  A pattern is in the article numbers. You only need to type in the first two numbers, select these numbers and then drag down.\n\n3.  The dollar prices have also a pattern (increments of 2.50). Enter only the first two prices, select them and drag down. The prices themselves must be formatted as currency with 2 decimals and the \\$ as currency symbol.\n\n4.  The price in euro can be calculated from the dollar price by multiplying this price with the dollar exchange rate. You only need to enter the correct formula in the first cell (C6) then you can copy it down. Use an absolute address for the dollar exchange rate, this address should not be updated during the copy action.\n\n5.  To calculate the amount of VAT the euro price should be multiplied by the VAT rate. And for the price incl. VAT the amount of VAT must be added to the exclusive price. Again, you just have to enter the correct formulas in the first cells (D6 and E6) and then copy it down. Use an absolute address for the VAT rate.\n\n6.  Finally, all euro amounts should be formatted as currencies.\n\n</div>\n\n:::\n\n",
    "supporting": [
      "05-calculations_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}